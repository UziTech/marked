import * as esbuild from 'esbuild';
import { umdWrapper } from 'esbuild-plugin-umd-wrapper';
import fs from 'fs';

const version = process.env.SEMANTIC_RELEASE_NEXT_VERSION || JSON.parse(fs.readFileSync('./package.json')).version;

console.log('building version:', version);

const banner = `/**
 * marked v${version} - a markdown parser
 * Copyright (c) 2011-${new Date().getFullYear()}, Christopher Jeffrey. (MIT Licensed)
 * https://github.com/markedjs/marked
 */

/**
 * DO NOT EDIT THIS FILE
 * The code in this file is generated from files in ./src/
 */
`;

await esbuild.build({
  entryPoints: ['src/marked.ts'],
  banner: {
    js: banner,
  },
  format: 'esm',
  sourcemap: true,
  bundle: true,
  outfile: 'lib/marked.esm.js',
});

await esbuild.build({
  entryPoints: ['src/marked.ts'],
  banner: {
    js: banner,
  },
  format: 'cjs',
  sourcemap: true,
  bundle: true,
  outfile: 'lib/marked.cjs',
});

await esbuild.build({
  entryPoints: ['src/marked.ts'],
  banner: {
    js: banner,
  },
  format: 'umd',
  sourcemap: true,
  bundle: true,
  outfile: 'lib/marked.umd.js',
  plugins: [umdWrapper({
    libraryName: 'marked',
  })],
});

await esbuild.build({
  entryPoints: ['src/marked.ts'],
  banner: {
    js: banner,
  },
  format: 'umd',
  bundle: true,
  minify: true,
  outfile: 'marked.min.js',
  plugins: [umdWrapper({
    libraryName: 'marked',
  })],
});
